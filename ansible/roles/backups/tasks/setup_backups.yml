---
- name: Generate local backup scripts
  become: true
  tags: always
  loop: "{{ _local_backups_dirs }}"
  ansible.builtin.template:
    src: "local-backup.sh.j2"
    dest: "/usr/local/bin/local-backup-{{ item.name }}"
    mode: "0744"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
- name: Generate snapshot scripts
  become: true
  tags: always
  loop: "{{ _zfs_snapshots }}"
  ansible.builtin.template:
    src: "zfs-snapshot.sh.j2"
    dest: "/usr/local/bin/zfs-snapshot-{{ item.name }}"
    mode: "0744"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
- name: Setup backups cron jobs
  become: true
  ansible.builtin.template:
    src: "backups.crontab.j2"
    dest: "/etc/cron.d/backups_ansible"
    mode: "0644"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  notify: "Restart cron service"

- name: Run a local backup for all directories
  loop: "{{ _local_backups_dirs }}"
  tags: never,run-local
  ansible.builtin.command:
    cmd: "local-backup-{{ item.name }}"
  changed_when: true
- name: Run a snapshot for all filesystems
  loop: "{{ _zfs_snapshots }}"
  tags: never,run-snapshot
  ansible.builtin.command:
    cmd: "zfs-snapshot-{{ item.name }}"
  changed_when: true
- name: Push rclone backups
  loop: "{{ _rclone_backups_dirs }}"
  become: true
  tags: never,push-rclone
  ansible.builtin.command:
    cmd: "/usr/local/bin/rclone --config /opt/rclone/rclone.conf copy {{ item.src }} {{ item.target }}"
  changed_when: true

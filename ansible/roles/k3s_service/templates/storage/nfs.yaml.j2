# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: "{{ volume.name }}"
#   namespace: "{{ k3s_service_namespace }}"
# spec:
#   capacity:
#     storage: "{{ volume.size }}"
#   persistentVolumeReclaimPolicy: Retain
#   accessModes:
#     - ReadWriteMany
#   storageClassName: "nfs-static"
#   claimRef:
#     name: "{{ volume.name }}"
#     namespace: "{{ k3s_service_namespace }}"
#   csi:
#     driver: nfs.csi.k8s.io
#     # volumeHandle format: {nfs-server-address}#{sub-dir-name}#{share-name}
#     # make sure this value is unique for every share in the cluster
#     volumeHandle: "{{ k3s_service_namespace }}#{{ volume.name }}"
#     volumeAttributes:
#       server: "{{ nfs_server }}"
#       share: "{{ nfs_root_path }}"
#       subdir: "{{ k3s_service_namespace }}/{{ volume.name }}"
#   # mountOptions:
#   #   - nfsvers=4.2
#   # nfs:
#   #   server: "{{ nfs_server }}"
#   #   path: "{{ nfs_root_path }}/{{ k3s_service_namespace }}/{{ volume.name }}"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ volume.name }}"
  namespace: "{{ k3s_service_namespace }}"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage:  "{{ volume.size }}"
  storageClassName: "nfs-dynamic"

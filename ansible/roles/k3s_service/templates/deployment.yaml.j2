apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ k3s_service_name }}"
  namespace: "{{ k3s_service_namespace }}"
spec:
  selector:
    matchLabels:
      name: "{{ k3s_service_name }}"
  replicas: 1 
  template:
    metadata:
      labels:
        name: "{{ k3s_service_name }}"
    spec:

{#################### containers ####################}
      containers:

        - name: "{{ k3s_service_name }}"
          image: "{{ k3s_service_image }}"
          ports:
            - containerPort: {{ k3s_service_container_port }}
          volumeMounts:
{% for volume in data_volumes %}
            - name:  "volume-{{ volume.name }}"
              mountPath: "{{ volume.mount_path }}"
{% endfor %}

{#################### Volumes ####################}
      volumes:
{% for volume in data_volumes %}
      - name: "volume-{{ volume.name }}"
        persistentVolumeClaim:
          claimName: "{{ volume.name }}"
{% endfor %}
{% if config_map_enabled %}
      - name: "volume-configuration"
        configMap:
          name: "{{ configmap_name | default("configmap") }}"
          items:
          # TODO this seems to be the correct way... use this, and then if it works try mounting it directly rather than copying
{% for file in config_map_files %}
          - key: {{ file.name }}
            path: {{ file.name }}
{% endfor %}
{% endif %}

{#################### Init containers ####################}
{% if config_map_enabled %}
      initContainers:
      - name: "{{ k3s_service_name }}-init"
        image: busybox
        command:
{% set commands = [] %}
{% for file in config_map_files %}
{% set dont_overwrite_option = '-n' if file.init_only else '' %}
  {{ commands.append(" mkdir -p '"~(file.mount_path | dirname)~"'") }}
  {{ commands.append(" cp "~dont_overwrite_option~" '/tmp/"~(file.name)~"' '"~file.mount_path~"'") }}
{% endfor %}
        - "sh"
        - "-c"
        - "{{ commands | join(';') }}"
        volumeMounts:
{% for volume in data_volumes %}
        - name:  "volume-{{ volume.name }}"
          mountPath: "{{ volume.mount_path }}"
{% endfor %}
        - name:  "volume-configuration"
          mountPath: "/tmp"
{% endif %}

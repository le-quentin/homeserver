apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ k3s_service_name }}"
  namespace: "{{ k3s_service_namespace }}"
spec:
  selector:
    matchLabels:
      name: "{{ k3s_service_name }}"
  replicas: 1 # tells deployment to run 1 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        name: "{{ k3s_service_name }}"
    spec:
      initContainers:
      - name: "{{ k3s_service_name }}-init"
        image: busybox
        command:
{% set commands = [] %}
{% for file in k3s_service_config_files | selectattr('init_only', 'equalto', true) %}
  {{ commands.append("cp -n '/tmp"~(file.dest)~"' '"~file.dest~"'") }}
{% endfor %}
        - "sh"
        - "-c"
        - "{{ commands | join(';') }}"
        volumeMounts:
        - name:  "{{ k3s_service_name }}-volume"
          mountPath: /config
{% for file in k3s_service_config_files | selectattr('init_only', 'equalto', true) %}
        - name:  "{{ k3s_service_name }}-configuration-volume"
          mountPath: "/tmp{{ file.dest }}"
          subPath: "{{ file.dest | basename }}"
{% endfor %}
      containers:
      - name: "{{ k3s_service_name }}"
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name:  "{{ k3s_service_name }}-volume"
          mountPath: /config
{% for file in k3s_service_config_files | selectattr('init_only', 'equalto', false) %}
        - name:  "{{ k3s_service_name }}-configuration-volume"
          mountPath: "{{ file.dest }}"
          subPath: "{{ file.dest | basename }}"
{% endfor %}
      volumes:
      - name: "{{ k3s_service_name }}-volume"
        persistentVolumeClaim:
          claimName: "{{ k3s_service_name }}-pvc"
      - name: "{{ k3s_service_name }}-configuration-volume"
        configMap:
          name: "{{ k3s_service_name }}-config-files"
{#          items:
          - key: "{{ file.dest | basename }}"
            path: "{{ file.dest | basename }}"#}

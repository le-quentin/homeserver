---
- name: Verify inputs
  ansible.builtin.import_tasks: verify_inputs.yml

- name: Set the general facts
  ansible.builtin.import_tasks: general_facts.yml
  tags: always

- name: Set the install facts
  ansible.builtin.import_tasks: install_facts.yml
  tags: install

- name: Set the databases facts
  ansible.builtin.import_tasks: databases_facts.yml
  tags: databases

- name: Set backups facts
  tags: never,backup,restore
  ansible.builtin.set_fact:
    backup_dir: "/backups/{{ db }}"
    backups_root: "/backups"

- name: Prepare restoration
  ansible.builtin.import_tasks: restore.yml
  tags: never,restore

- name: Call postgres setup role
  become: true
  when: "'restore' not in ansible_run_tags"
  ansible.builtin.import_role:
    name: geerlingguy.postgresql
  vars:
    postgres_users_no_log: "{{ postgres_no_log }}"
  tags: always

- name: Every created user becomes owner of the public schema of its database
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  community.postgresql.postgresql_owner:
    db: "{{ item.name }}"
    new_owner: "{{ item.user }}"
    obj_name: public
    obj_type: schema
  with_items: "{{ present_databases }}"
  no_log: "{{ postgres_no_log }}"
  tags: databases

- name: Setup backups
  with_items: "{{ present_databases }}"
  ansible.builtin.include_tasks: setup_backups.yml

- name: Run a backup
  vars:
    dump_path: "/tmp/dump-{{ db }}-{{ now(fmt='%Y-%m-%d_%H:%M') }}.tar.gz"
  no_log: "{{ postgres_no_log }}"
  tags: never,backup
  block:
    - name: Dump the database
      become: true
      become_user: postgres
      community.postgresql.postgresql_db:
        state: dump
        name: "{{ db }}"
        target: "{{ dump_path }}"
    - name: Give ownership to nfs user
      become: true
      ansible.builtin.file:
        path: "{{ dump_path }}"
        owner: "nfs"
        group: "nfs"
    - name: Move the dump file to backups folder
      changed_when: true
      become: true
      become_user: nfs
      ansible.builtin.shell: "mkdir -p {{ backup_dir }}; mv {{ dump_path }} {{ backup_dir }}"

# - name: Restore from a backup
#   tags: never,restore
